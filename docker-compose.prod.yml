services:
  nginx:
    image: nginx:latest
    ports:
      - "${NGINX_PORT:-6080}:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    restart: on-failure

  backend:
    image: ghcr.io/${GITHUB_REPOSITORY:-pyspur-dev/pyspur}-backend:${VERSION:-latest}
    command: bash /pyspur/backend/entrypoint.sh
    env_file:
      - ./.env.example
      - ./.env
    volumes:
      - ./.env:/pyspur/backend/.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY:-pyspur-dev/pyspur}-frontend:${VERSION:-latest}
    command: npm run start
    env_file:
      - ./.env.example
      - ./.env
    depends_on:
      - backend

  db:
    image: postgres:17-alpine
    restart: on-failure
    env_file:
      - ./.env.example
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
        test: ['CMD-SHELL', 'pg_isready -U pyspur']
        interval: 5s
        timeout: 5s
volumes:
  postgres_data: